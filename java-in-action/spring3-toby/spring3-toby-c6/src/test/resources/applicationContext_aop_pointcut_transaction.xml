<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">



	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/spring3" />
		<property name="username" value="postgres" />
		<property name="password" value="postgres" />
	</bean>

	<bean id="userDao" class="springbook.user.dao.impl.global.transaction.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
	</aop:config>

	<!--
	1.
	<bean id="transactionAdvice" class="springbook.user.service.aop.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	 -->
	<!--
	2.
	<bean id="transactionAdvice" class="org.springframwork.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
 	-->

	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>



	<!-- <bean id="userServiceImpl" class="springbook.user.service.aop.UserServiceImpl">  -->
	<bean id="userService" class="springbook.user.service.aop.UserServiceImpl">
		<property name="userDao" ref="userDao" />
	    <property name="mailSender" ref="mailSender" />
	</bean>

	<!-- テスト用 UserServiceの登録
		static member classは $で指定
		parent : beanの情報を承継する。 -> userDaoまたはmailSenderの別途の指定が必要ない
	-->
	<bean id="testUserService" class="springbook.user.service.aop.UserServiceByPointcutTransactionTest$TestUserServiceImpl" parent="userService"/>


<!-- mail server james or postfix on local -->
<!--
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="localhost" />
	</bean>
-->

	<bean id="mailSender" class="springbook.user.service.global.transaction.DummyMailSender" />


	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />


	<bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
		<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
	</bean>
	<!--
	<bean id="transactionPointcut" class="springbook.user.service.aop.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*ServiceImpl" />
		<property name="mappedName" value="upgrade*" />
	</bean>
	 -->

	<!--
	変更①
	<bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="upgrade*" />
	</bean>
	 -->

	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean>

</beans>
