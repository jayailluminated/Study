<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>java-in-action</artifactId>
        <groupId>java-in-action</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>junit-in-action</artifactId>
    <name>junit-in-action</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- loggin -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jcl</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <!-- mockito - this is the best mock framwork among mockito, esaymock,
            jmock -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.8.5</version>
        </dependency>

        <!-- easymock -->
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymockclassextension</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>

        <!-- jmock -->
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-legacy</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>2.5.1</version>
        </dependency>

        <!-- servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- htmlunit -->
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.8</version>
            <scope>test</scope>
        </dependency>

        <!-- cactus -->
        <dependency>
            <groupId>org.apache.cactus</groupId>
            <artifactId>cactus.core.framework.uberjar.javaEE.14</artifactId>
            <version>1.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cactus</groupId>
            <artifactId>cactus.integration.ant</artifactId>
            <version>1.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cactus</groupId>
            <artifactId>cactus.integration.shared.api</artifactId>
            <version>1.8.1</version>
        </dependency>

        <!-- dbunit -->
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.4.8</version>
        </dependency>

        <!-- database for test -->
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
            <scope>test</scope>
        </dependency>



        <!-- cargo -->
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-uberjar</artifactId>
            <version>1.0-alpha-4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-ant</artifactId>
            <version>1.0-alpha-4</version>
            <scope>provided</scope>
        </dependency>


        <!-- el api -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>jasper-el</artifactId>
            <version>6.0.29</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>3.0.4.RELEASE</version>
            <!-- jdbc >> bean, core, tx -->
            <!-- tx >> aopalliance, aop, bean, context, core -->
            <!-- context >> aop, bean, core, expression, asm -->
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.cactus</groupId>
                <artifactId>cactus.integration.maven2</artifactId>
                <version>1.8.1</version>
                <configuration>
                    <srcFile>${project.build.directory}/${project.artifactId}-${project.version}.war</srcFile>
                    <destFile>${project.build.directory}/${project.artifactId}-cactified.war</destFile>
                    <testClasses>
                        <directory>target/test-classes</directory>
                        <includes>
                            <include>**/**Test*.class</include>
                        </includes>
                    </testClasses>
                    <libDependencies>
                        <dependency>
                            <groupId>net.sourceforge.htmlunit</groupId>
                            <artifactId>htmlunit</artifactId>
                        </dependency>
                    </libDependencies>
                </configuration>
                <executions>
                    <execution>
                        <id>cactus-cactifywar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>cactifywar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.0-beta-2</version>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <wait>false</wait>
                    <timeout>20000</timeout>
                    <container>
                        <containerId>tomcat5x</containerId>
                        <log>target/cargo.log</log>
                        <output>target/output.log</output>
                        <!-- If you don't want cargo to download the container, just comment
                            the bottom lines and specify a [home] parameter -->
                        <zipUrlInstaller>
                            <url>http://apache.speedbone.de/tomcat/tomcat-5/v5.5.27/bin/apache-tomcat-5.5.27.zip</url>
                            <installDir>${basedir}/install</installDir>
                        </zipUrlInstaller>
                    </container>
                    <configuration>
                        <deployables>
                            <deployable>
                                <location>${project.build.directory}/${pom.artifactId}-cactified.war</location>
                                <type>war</type>
                                <properties>
                                    <context>/test</context>
                                </properties>
                                <pingURL>http://localhost:8080/</pingURL>
                            </deployable>
                        </deployables>
                    </configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <systemProperties>
                                <property>
                                    <name>cactus.contextURL</name>
                                    <value>http://localhost:8085/test/</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <useCache>false</useCache>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <warSourceIncludes>
                        *, test/*, WEB-INF/classes/**
                    </warSourceIncludes>
                    <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
                </configuration>
                <executions>
                    <execution>
                        <id>create-cactus-war-archive</id>
                        <phase>test</phase>
                        <goals>
                            <goal>war</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>